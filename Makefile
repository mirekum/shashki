#############################################################################
# Makefile for building: shashki
# Generated by qmake (2.01a) (Qt 4.6.2) on: Thu Jul 8 15:30:47 2010
# Project:  shashki.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile shashki.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GL_NO_SCISSOR_TEST -DQT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH=1024 -DQT_TESTLIB_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -w -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -w -D_REENTRANT $(DEFINES)
INCPATH       = -I/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/linux-g++-maemo5 -I. -I/targets/FREMANTLE_ARMEL/usr/include/QtCore -I/targets/FREMANTLE_ARMEL/usr/include/QtGui -I/targets/FREMANTLE_ARMEL/usr/include/QtTest -I/targets/FREMANTLE_ARMEL/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath-link,/usr/lib -Wl,-rpath,/usr/lib
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/lib -lQtTest -lQtGui -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ai.cpp \
		board.cpp \
		experiment.cpp \
		game.cpp \
		human.cpp \
		main.cpp \
		network.cpp \
		test_board.cpp moc_test_board.cpp
OBJECTS       = ai.o \
		board.o \
		experiment.o \
		game.o \
		human.o \
		main.o \
		network.o \
		test_board.o \
		moc_test_board.o
DIST          = /targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/unix.conf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/linux.conf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/qconfig.pri \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/debug.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qtestlib.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/warn_off.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/moc.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/resources.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/uic.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/lex.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		shashki.pro
QMAKE_TARGET  = shashki
DESTDIR       = 
TARGET        = shashki

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: shashki.pro  /targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/linux-g++-maemo5/qmake.conf /targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/unix.conf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/linux.conf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/qconfig.pri \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/debug.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qtestlib.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/warn_off.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/moc.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/resources.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/uic.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/lex.prf \
		/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtTest.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtGui.prl
	$(QMAKE) -unix -o Makefile shashki.pro
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/unix.conf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/common/linux.conf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/qconfig.pri:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/debug.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qtestlib.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/warn_off.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/qt.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/moc.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/resources.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/uic.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/lex.prf:
/targets/FREMANTLE_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtTest.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtGui.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile shashki.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/shashki1.0.0 || $(MKDIR) .tmp/shashki1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/shashki1.0.0/ && $(COPY_FILE) --parents ai.h board.h experiment.h game.h human.h network.h player.h test_board.h .tmp/shashki1.0.0/ && $(COPY_FILE) --parents ai.cpp board.cpp experiment.cpp game.cpp human.cpp main.cpp network.cpp test_board.cpp .tmp/shashki1.0.0/ && (cd `dirname .tmp/shashki1.0.0` && $(TAR) shashki1.0.0.tar shashki1.0.0 && $(COMPRESS) shashki1.0.0.tar) && $(MOVE) `dirname .tmp/shashki1.0.0`/shashki1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/shashki1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_test_board.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_test_board.cpp
moc_test_board.cpp: board.h \
		test_board.h
	/usr/bin/moc $(DEFINES) $(INCPATH) test_board.h -o moc_test_board.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

ai.o: ai.cpp board.h \
		ai.h \
		player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ai.o ai.cpp

board.o: board.cpp board.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o board.o board.cpp

experiment.o: experiment.cpp board.h \
		player.h \
		game.h \
		ai.h \
		experiment.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o experiment.o experiment.cpp

game.o: game.cpp board.h \
		player.h \
		human.h \
		ai.h \
		network.h \
		game.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

human.o: human.cpp board.h \
		human.h \
		player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o human.o human.cpp

main.o: main.cpp game.h \
		board.h \
		player.h \
		test_board.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

network.o: network.cpp board.h \
		network.h \
		player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network.o network.cpp

test_board.o: test_board.cpp test_board.h \
		board.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o test_board.o test_board.cpp

moc_test_board.o: moc_test_board.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_test_board.o moc_test_board.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

